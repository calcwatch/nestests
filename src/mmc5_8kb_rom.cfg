MEMORY {
    # INES Cartridge Header
    HEADER:  file = %O, start = $0000, size = $0010, fill = yes;

    # Unlike on the C64, we're free to use all the zeropage RAM for anything
    ZP:      file = "", start = $0000, size = $0100, type = rw, define = yes;

    # Just defined for completeness. We never should write here directly
    STACK:   file = "", start = $0100, size = $0100, type = rw, define = yes;

    # The rest of the 2 kB internal RAM
    RAM:     file = "", start = $0200, size = $0600, type = rw, define = yes;

    # Used for the NES nametable (like the C64 screen memory)
    EXRAM:   file = "", start = $5C00, size = $0400, define = yes;

    # 4 contiguous 8 kB banks
    PRGRAM:  file = "", start = $6000, size = $8000, define = yes;

    # Padding because having just one 8kB ROM isn't widely supported
    EMPTY_ROM: file = %O, start = $C000, size = $2000, fill = yes;

     # ROM
    PRGROM: file = %O, start = $E000, size = $1FFA, fill = yes, define = yes;

    # Vectors at end of the last 8 kB PRGROM
    ROMV:    file = %O, start = $FFFA, size = $0006, fill = yes;

    # 2 4 kB CHR Banks
    CHRROM:  file = %O, start = $0000, size = $2000, fill = yes;
}
SEGMENTS {
    HEADER:   load = HEADER,          type = ro;
    ZEROPAGE: load = ZP,              type = rw;
    RAM:      load = RAM,             type = rw;
    PRGRAM:   load = PRGRAM,          type = rw;
    RODATA:   load = PRGROM,          type = ro;
    CODE:     load = PRGROM,          type = ro;
    VECTORS:  load = ROMV,            type = ro;
    CHARS:    load = CHRROM,          type = ro;
}

SYMBOLS {
    NES_BATTERY:    type = weak, value = 1;  # 1 = Battery present
    NES_MAPPER:     type = weak, value = 5;  # 5 = MMC5
    NES_PRG_BANKS:  type = weak, value = 1;  # number of 16 kB PRG banks
    NES_CHR_BANKS:  type = weak, value = 1;  # number of 8 kB CHR banks
    NES_MIRRORING:  type = weak, value = 0;  # 0 = horizontal mirroring
    NES_PRG_RAM:    type = weak, value = 9;  # 64 ** 9 == 32 kB RAM
}
